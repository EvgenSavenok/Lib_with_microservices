### YamlMime:ManagedReference
items:
- uid: BooksManagementService.Models.Book
  commentId: T:BooksManagementService.Models.Book
  id: Book
  parent: BooksManagementService.Models
  children:
  - BooksManagementService.Models.Book.Amount
  - BooksManagementService.Models.Book.AuthorLastName
  - BooksManagementService.Models.Book.AuthorName
  - BooksManagementService.Models.Book.BookTitle
  - BooksManagementService.Models.Book.Description
  - BooksManagementService.Models.Book.Genre
  - BooksManagementService.Models.Book.ISBN
  - BooksManagementService.Models.Book.Id
  langs:
  - csharp
  - vb
  name: Book
  nameWithType: Book
  fullName: BooksManagementService.Models.Book
  type: Class
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: Book
    path: Models/Book.cs
    startLine: 14
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: public class Book
    content.vb: Public Class Book
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: BooksManagementService.Models.Book.Id
  commentId: P:BooksManagementService.Models.Book.Id
  id: Id
  parent: BooksManagementService.Models.Book
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Book.Id
  fullName: BooksManagementService.Models.Book.Id
  type: Property
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: Id
    path: Models/Book.cs
    startLine: 16
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: >-
      [Column("BookId")]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Column("BookId")>

      Public Property Id As Integer
  overload: BooksManagementService.Models.Book.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BookId
- uid: BooksManagementService.Models.Book.ISBN
  commentId: P:BooksManagementService.Models.Book.ISBN
  id: ISBN
  parent: BooksManagementService.Models.Book
  langs:
  - csharp
  - vb
  name: ISBN
  nameWithType: Book.ISBN
  fullName: BooksManagementService.Models.Book.ISBN
  type: Property
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: ISBN
    path: Models/Book.cs
    startLine: 19
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "Book title is a required field.")]

      [MaxLength(13, ErrorMessage = "Maximum length for the title is 13 characters.")]

      [MinLength(10, ErrorMessage = "Minimum length for the title is 10 characters.")]

      public string ISBN { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Book title is a required field.")>

      <MaxLength(13, ErrorMessage:="Maximum length for the title is 13 characters.")>

      <MinLength(10, ErrorMessage:="Minimum length for the title is 10 characters.")>

      Public Property ISBN As String
  overload: BooksManagementService.Models.Book.ISBN*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Book title is a required field.
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 13
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Maximum length for the title is 13 characters.
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 10
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Minimum length for the title is 10 characters.
- uid: BooksManagementService.Models.Book.BookTitle
  commentId: P:BooksManagementService.Models.Book.BookTitle
  id: BookTitle
  parent: BooksManagementService.Models.Book
  langs:
  - csharp
  - vb
  name: BookTitle
  nameWithType: Book.BookTitle
  fullName: BooksManagementService.Models.Book.BookTitle
  type: Property
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: BookTitle
    path: Models/Book.cs
    startLine: 24
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "Book title is a required field.")]

      [MaxLength(30, ErrorMessage = "Maximum length for the title is 30 characters.")]

      public string BookTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Book title is a required field.")>

      <MaxLength(30, ErrorMessage:="Maximum length for the title is 30 characters.")>

      Public Property BookTitle As String
  overload: BooksManagementService.Models.Book.BookTitle*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Book title is a required field.
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 30
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Maximum length for the title is 30 characters.
- uid: BooksManagementService.Models.Book.Genre
  commentId: P:BooksManagementService.Models.Book.Genre
  id: Genre
  parent: BooksManagementService.Models.Book
  langs:
  - csharp
  - vb
  name: Genre
  nameWithType: Book.Genre
  fullName: BooksManagementService.Models.Book.Genre
  type: Property
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: Genre
    path: Models/Book.cs
    startLine: 28
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "Book genre is a required field.")]

      public BookGenre Genre { get; set; }
    parameters: []
    return:
      type: BooksManagementService.Models.BookGenre
    content.vb: >-
      <Required(ErrorMessage:="Book genre is a required field.")>

      Public Property Genre As BookGenre
  overload: BooksManagementService.Models.Book.Genre*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Book genre is a required field.
- uid: BooksManagementService.Models.Book.Description
  commentId: P:BooksManagementService.Models.Book.Description
  id: Description
  parent: BooksManagementService.Models.Book
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Book.Description
  fullName: BooksManagementService.Models.Book.Description
  type: Property
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: Description
    path: Models/Book.cs
    startLine: 31
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "Description is a required field.")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Description is a required field.")>

      Public Property Description As String
  overload: BooksManagementService.Models.Book.Description*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Description is a required field.
- uid: BooksManagementService.Models.Book.AuthorName
  commentId: P:BooksManagementService.Models.Book.AuthorName
  id: AuthorName
  parent: BooksManagementService.Models.Book
  langs:
  - csharp
  - vb
  name: AuthorName
  nameWithType: Book.AuthorName
  fullName: BooksManagementService.Models.Book.AuthorName
  type: Property
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: AuthorName
    path: Models/Book.cs
    startLine: 33
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "Author name is a required field.")]

      public string AuthorName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Author name is a required field.")>

      Public Property AuthorName As String
  overload: BooksManagementService.Models.Book.AuthorName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Author name is a required field.
- uid: BooksManagementService.Models.Book.AuthorLastName
  commentId: P:BooksManagementService.Models.Book.AuthorLastName
  id: AuthorLastName
  parent: BooksManagementService.Models.Book
  langs:
  - csharp
  - vb
  name: AuthorLastName
  nameWithType: Book.AuthorLastName
  fullName: BooksManagementService.Models.Book.AuthorLastName
  type: Property
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: AuthorLastName
    path: Models/Book.cs
    startLine: 35
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "Author last name is a required field.")]

      public string AuthorLastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Author last name is a required field.")>

      Public Property AuthorLastName As String
  overload: BooksManagementService.Models.Book.AuthorLastName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Author last name is a required field.
- uid: BooksManagementService.Models.Book.Amount
  commentId: P:BooksManagementService.Models.Book.Amount
  id: Amount
  parent: BooksManagementService.Models.Book
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: Book.Amount
  fullName: BooksManagementService.Models.Book.Amount
  type: Property
  source:
    remote:
      path: BooksManagementService/Models/Book.cs
      branch: master
      repo: https://github.com/EvgenSavenok/Lib_with_microservices.git
    id: Amount
    path: Models/Book.cs
    startLine: 38
  assemblies:
  - BooksManagementService
  namespace: BooksManagementService.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "Author ID is a required field.")]

      public int Amount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required(ErrorMessage:="Author ID is a required field.")>

      Public Property Amount As Integer
  overload: BooksManagementService.Models.Book.Amount*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Author ID is a required field.
references:
- uid: BooksManagementService.Models
  commentId: N:BooksManagementService.Models
  href: BooksManagementService.html
  name: BooksManagementService.Models
  nameWithType: BooksManagementService.Models
  fullName: BooksManagementService.Models
  spec.csharp:
  - uid: BooksManagementService
    name: BooksManagementService
    href: BooksManagementService.html
  - name: .
  - uid: BooksManagementService.Models
    name: Models
    href: BooksManagementService.Models.html
  spec.vb:
  - uid: BooksManagementService
    name: BooksManagementService
    href: BooksManagementService.html
  - name: .
  - uid: BooksManagementService.Models
    name: Models
    href: BooksManagementService.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BooksManagementService.Models.Book.Id*
  commentId: Overload:BooksManagementService.Models.Book.Id
  href: BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Id
  name: Id
  nameWithType: Book.Id
  fullName: BooksManagementService.Models.Book.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BooksManagementService.Models.Book.ISBN*
  commentId: Overload:BooksManagementService.Models.Book.ISBN
  href: BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_ISBN
  name: ISBN
  nameWithType: Book.ISBN
  fullName: BooksManagementService.Models.Book.ISBN
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BooksManagementService.Models.Book.BookTitle*
  commentId: Overload:BooksManagementService.Models.Book.BookTitle
  href: BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_BookTitle
  name: BookTitle
  nameWithType: Book.BookTitle
  fullName: BooksManagementService.Models.Book.BookTitle
- uid: BooksManagementService.Models.Book.Genre*
  commentId: Overload:BooksManagementService.Models.Book.Genre
  href: BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Genre
  name: Genre
  nameWithType: Book.Genre
  fullName: BooksManagementService.Models.Book.Genre
- uid: BooksManagementService.Models.BookGenre
  commentId: T:BooksManagementService.Models.BookGenre
  parent: BooksManagementService.Models
  href: BooksManagementService.Models.BookGenre.html
  name: BookGenre
  nameWithType: BookGenre
  fullName: BooksManagementService.Models.BookGenre
- uid: BooksManagementService.Models.Book.Description*
  commentId: Overload:BooksManagementService.Models.Book.Description
  href: BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Description
  name: Description
  nameWithType: Book.Description
  fullName: BooksManagementService.Models.Book.Description
- uid: BooksManagementService.Models.Book.AuthorName*
  commentId: Overload:BooksManagementService.Models.Book.AuthorName
  href: BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_AuthorName
  name: AuthorName
  nameWithType: Book.AuthorName
  fullName: BooksManagementService.Models.Book.AuthorName
- uid: BooksManagementService.Models.Book.AuthorLastName*
  commentId: Overload:BooksManagementService.Models.Book.AuthorLastName
  href: BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_AuthorLastName
  name: AuthorLastName
  nameWithType: Book.AuthorLastName
  fullName: BooksManagementService.Models.Book.AuthorLastName
- uid: BooksManagementService.Models.Book.Amount*
  commentId: Overload:BooksManagementService.Models.Book.Amount
  href: BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Amount
  name: Amount
  nameWithType: Book.Amount
  fullName: BooksManagementService.Models.Book.Amount
