### YamlMime:XRefMap
sorted: true
references:
- uid: BooksManagementService
  name: BooksManagementService
  href: api/BooksManagementService.html
  commentId: N:BooksManagementService
  fullName: BooksManagementService
  nameWithType: BooksManagementService
- uid: BooksManagementService.Controllers
  name: BooksManagementService.Controllers
  href: api/BooksManagementService.Controllers.html
  commentId: N:BooksManagementService.Controllers
  fullName: BooksManagementService.Controllers
  nameWithType: BooksManagementService.Controllers
- uid: BooksManagementService.Controllers.BooksController
  name: BooksController
  href: api/BooksManagementService.Controllers.BooksController.html
  commentId: T:BooksManagementService.Controllers.BooksController
  fullName: BooksManagementService.Controllers.BooksController
  nameWithType: BooksController
- uid: BooksManagementService.Controllers.BooksController.#ctor(Contracts.IRepositoryManager,AutoMapper.IMapper)
  name: BooksController(IRepositoryManager, IMapper)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController__ctor_Contracts_IRepositoryManager_AutoMapper_IMapper_
  commentId: M:BooksManagementService.Controllers.BooksController.#ctor(Contracts.IRepositoryManager,AutoMapper.IMapper)
  name.vb: New(IRepositoryManager, IMapper)
  fullName: BooksManagementService.Controllers.BooksController.BooksController(Contracts.IRepositoryManager, AutoMapper.IMapper)
  fullName.vb: BooksManagementService.Controllers.BooksController.New(Contracts.IRepositoryManager, AutoMapper.IMapper)
  nameWithType: BooksController.BooksController(IRepositoryManager, IMapper)
  nameWithType.vb: BooksController.New(IRepositoryManager, IMapper)
- uid: BooksManagementService.Controllers.BooksController.#ctor*
  name: BooksController
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController__ctor_
  commentId: Overload:BooksManagementService.Controllers.BooksController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BooksManagementService.Controllers.BooksController.BooksController
  fullName.vb: BooksManagementService.Controllers.BooksController.New
  nameWithType: BooksController.BooksController
  nameWithType.vb: BooksController.New
- uid: BooksManagementService.Controllers.BooksController.BooksPageAdmin
  name: BooksPageAdmin()
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_BooksPageAdmin
  commentId: M:BooksManagementService.Controllers.BooksController.BooksPageAdmin
  fullName: BooksManagementService.Controllers.BooksController.BooksPageAdmin()
  nameWithType: BooksController.BooksPageAdmin()
- uid: BooksManagementService.Controllers.BooksController.BooksPageAdmin*
  name: BooksPageAdmin
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_BooksPageAdmin_
  commentId: Overload:BooksManagementService.Controllers.BooksController.BooksPageAdmin
  isSpec: "True"
  fullName: BooksManagementService.Controllers.BooksController.BooksPageAdmin
  nameWithType: BooksController.BooksPageAdmin
- uid: BooksManagementService.Controllers.BooksController.CreateBook
  name: CreateBook()
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_CreateBook
  commentId: M:BooksManagementService.Controllers.BooksController.CreateBook
  fullName: BooksManagementService.Controllers.BooksController.CreateBook()
  nameWithType: BooksController.CreateBook()
- uid: BooksManagementService.Controllers.BooksController.CreateBook(BooksManagementService.DataTransferObjects.BookForCreationDto)
  name: CreateBook(BookForCreationDto)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_CreateBook_BooksManagementService_DataTransferObjects_BookForCreationDto_
  commentId: M:BooksManagementService.Controllers.BooksController.CreateBook(BooksManagementService.DataTransferObjects.BookForCreationDto)
  fullName: BooksManagementService.Controllers.BooksController.CreateBook(BooksManagementService.DataTransferObjects.BookForCreationDto)
  nameWithType: BooksController.CreateBook(BookForCreationDto)
- uid: BooksManagementService.Controllers.BooksController.CreateBook*
  name: CreateBook
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_CreateBook_
  commentId: Overload:BooksManagementService.Controllers.BooksController.CreateBook
  isSpec: "True"
  fullName: BooksManagementService.Controllers.BooksController.CreateBook
  nameWithType: BooksController.CreateBook
- uid: BooksManagementService.Controllers.BooksController.DeleteBook(System.Int32)
  name: DeleteBook(int)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_DeleteBook_System_Int32_
  commentId: M:BooksManagementService.Controllers.BooksController.DeleteBook(System.Int32)
  name.vb: DeleteBook(Integer)
  fullName: BooksManagementService.Controllers.BooksController.DeleteBook(int)
  fullName.vb: BooksManagementService.Controllers.BooksController.DeleteBook(Integer)
  nameWithType: BooksController.DeleteBook(int)
  nameWithType.vb: BooksController.DeleteBook(Integer)
- uid: BooksManagementService.Controllers.BooksController.DeleteBook*
  name: DeleteBook
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_DeleteBook_
  commentId: Overload:BooksManagementService.Controllers.BooksController.DeleteBook
  isSpec: "True"
  fullName: BooksManagementService.Controllers.BooksController.DeleteBook
  nameWithType: BooksController.DeleteBook
- uid: BooksManagementService.Controllers.BooksController.EditBook(System.Int32)
  name: EditBook(int)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_EditBook_System_Int32_
  commentId: M:BooksManagementService.Controllers.BooksController.EditBook(System.Int32)
  name.vb: EditBook(Integer)
  fullName: BooksManagementService.Controllers.BooksController.EditBook(int)
  fullName.vb: BooksManagementService.Controllers.BooksController.EditBook(Integer)
  nameWithType: BooksController.EditBook(int)
  nameWithType.vb: BooksController.EditBook(Integer)
- uid: BooksManagementService.Controllers.BooksController.EditBook*
  name: EditBook
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_EditBook_
  commentId: Overload:BooksManagementService.Controllers.BooksController.EditBook
  isSpec: "True"
  fullName: BooksManagementService.Controllers.BooksController.EditBook
  nameWithType: BooksController.EditBook
- uid: BooksManagementService.Controllers.BooksController.GetBook(System.Int32)
  name: GetBook(int)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_GetBook_System_Int32_
  commentId: M:BooksManagementService.Controllers.BooksController.GetBook(System.Int32)
  name.vb: GetBook(Integer)
  fullName: BooksManagementService.Controllers.BooksController.GetBook(int)
  fullName.vb: BooksManagementService.Controllers.BooksController.GetBook(Integer)
  nameWithType: BooksController.GetBook(int)
  nameWithType.vb: BooksController.GetBook(Integer)
- uid: BooksManagementService.Controllers.BooksController.GetBook(System.String)
  name: GetBook(string)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_GetBook_System_String_
  commentId: M:BooksManagementService.Controllers.BooksController.GetBook(System.String)
  name.vb: GetBook(String)
  fullName: BooksManagementService.Controllers.BooksController.GetBook(string)
  fullName.vb: BooksManagementService.Controllers.BooksController.GetBook(String)
  nameWithType: BooksController.GetBook(string)
  nameWithType.vb: BooksController.GetBook(String)
- uid: BooksManagementService.Controllers.BooksController.GetBook*
  name: GetBook
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_GetBook_
  commentId: Overload:BooksManagementService.Controllers.BooksController.GetBook
  isSpec: "True"
  fullName: BooksManagementService.Controllers.BooksController.GetBook
  nameWithType: BooksController.GetBook
- uid: BooksManagementService.Controllers.BooksController.GetBooks(Entities.RequestFeatures.BookParameters)
  name: GetBooks(BookParameters)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_GetBooks_Entities_RequestFeatures_BookParameters_
  commentId: M:BooksManagementService.Controllers.BooksController.GetBooks(Entities.RequestFeatures.BookParameters)
  fullName: BooksManagementService.Controllers.BooksController.GetBooks(Entities.RequestFeatures.BookParameters)
  nameWithType: BooksController.GetBooks(BookParameters)
- uid: BooksManagementService.Controllers.BooksController.GetBooks*
  name: GetBooks
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_GetBooks_
  commentId: Overload:BooksManagementService.Controllers.BooksController.GetBooks
  isSpec: "True"
  fullName: BooksManagementService.Controllers.BooksController.GetBooks
  nameWithType: BooksController.GetBooks
- uid: BooksManagementService.Controllers.BooksController.GetBooksCount(Entities.RequestFeatures.BookParameters)
  name: GetBooksCount(BookParameters)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_GetBooksCount_Entities_RequestFeatures_BookParameters_
  commentId: M:BooksManagementService.Controllers.BooksController.GetBooksCount(Entities.RequestFeatures.BookParameters)
  fullName: BooksManagementService.Controllers.BooksController.GetBooksCount(Entities.RequestFeatures.BookParameters)
  nameWithType: BooksController.GetBooksCount(BookParameters)
- uid: BooksManagementService.Controllers.BooksController.GetBooksCount*
  name: GetBooksCount
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_GetBooksCount_
  commentId: Overload:BooksManagementService.Controllers.BooksController.GetBooksCount
  isSpec: "True"
  fullName: BooksManagementService.Controllers.BooksController.GetBooksCount
  nameWithType: BooksController.GetBooksCount
- uid: BooksManagementService.Controllers.BooksController.UpdateBook(System.Int32,BooksManagementService.DataTransferObjects.BookForUpdateDto)
  name: UpdateBook(int, BookForUpdateDto)
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_UpdateBook_System_Int32_BooksManagementService_DataTransferObjects_BookForUpdateDto_
  commentId: M:BooksManagementService.Controllers.BooksController.UpdateBook(System.Int32,BooksManagementService.DataTransferObjects.BookForUpdateDto)
  name.vb: UpdateBook(Integer, BookForUpdateDto)
  fullName: BooksManagementService.Controllers.BooksController.UpdateBook(int, BooksManagementService.DataTransferObjects.BookForUpdateDto)
  fullName.vb: BooksManagementService.Controllers.BooksController.UpdateBook(Integer, BooksManagementService.DataTransferObjects.BookForUpdateDto)
  nameWithType: BooksController.UpdateBook(int, BookForUpdateDto)
  nameWithType.vb: BooksController.UpdateBook(Integer, BookForUpdateDto)
- uid: BooksManagementService.Controllers.BooksController.UpdateBook*
  name: UpdateBook
  href: api/BooksManagementService.Controllers.BooksController.html#BooksManagementService_Controllers_BooksController_UpdateBook_
  commentId: Overload:BooksManagementService.Controllers.BooksController.UpdateBook
  isSpec: "True"
  fullName: BooksManagementService.Controllers.BooksController.UpdateBook
  nameWithType: BooksController.UpdateBook
- uid: BooksManagementService.DataTransferObjects
  name: BooksManagementService.DataTransferObjects
  href: api/BooksManagementService.DataTransferObjects.html
  commentId: N:BooksManagementService.DataTransferObjects
  fullName: BooksManagementService.DataTransferObjects
  nameWithType: BooksManagementService.DataTransferObjects
- uid: BooksManagementService.DataTransferObjects.BookDto
  name: BookDto
  href: api/BooksManagementService.DataTransferObjects.BookDto.html
  commentId: T:BooksManagementService.DataTransferObjects.BookDto
  fullName: BooksManagementService.DataTransferObjects.BookDto
  nameWithType: BookDto
- uid: BooksManagementService.DataTransferObjects.BookDto.Amount
  name: Amount
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_Amount
  commentId: P:BooksManagementService.DataTransferObjects.BookDto.Amount
  fullName: BooksManagementService.DataTransferObjects.BookDto.Amount
  nameWithType: BookDto.Amount
- uid: BooksManagementService.DataTransferObjects.BookDto.Amount*
  name: Amount
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_Amount_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookDto.Amount
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookDto.Amount
  nameWithType: BookDto.Amount
- uid: BooksManagementService.DataTransferObjects.BookDto.AuthorLastName
  name: AuthorLastName
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_AuthorLastName
  commentId: P:BooksManagementService.DataTransferObjects.BookDto.AuthorLastName
  fullName: BooksManagementService.DataTransferObjects.BookDto.AuthorLastName
  nameWithType: BookDto.AuthorLastName
- uid: BooksManagementService.DataTransferObjects.BookDto.AuthorLastName*
  name: AuthorLastName
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_AuthorLastName_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookDto.AuthorLastName
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookDto.AuthorLastName
  nameWithType: BookDto.AuthorLastName
- uid: BooksManagementService.DataTransferObjects.BookDto.AuthorName
  name: AuthorName
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_AuthorName
  commentId: P:BooksManagementService.DataTransferObjects.BookDto.AuthorName
  fullName: BooksManagementService.DataTransferObjects.BookDto.AuthorName
  nameWithType: BookDto.AuthorName
- uid: BooksManagementService.DataTransferObjects.BookDto.AuthorName*
  name: AuthorName
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_AuthorName_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookDto.AuthorName
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookDto.AuthorName
  nameWithType: BookDto.AuthorName
- uid: BooksManagementService.DataTransferObjects.BookDto.BookTitle
  name: BookTitle
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_BookTitle
  commentId: P:BooksManagementService.DataTransferObjects.BookDto.BookTitle
  fullName: BooksManagementService.DataTransferObjects.BookDto.BookTitle
  nameWithType: BookDto.BookTitle
- uid: BooksManagementService.DataTransferObjects.BookDto.BookTitle*
  name: BookTitle
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_BookTitle_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookDto.BookTitle
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookDto.BookTitle
  nameWithType: BookDto.BookTitle
- uid: BooksManagementService.DataTransferObjects.BookDto.Description
  name: Description
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_Description
  commentId: P:BooksManagementService.DataTransferObjects.BookDto.Description
  fullName: BooksManagementService.DataTransferObjects.BookDto.Description
  nameWithType: BookDto.Description
- uid: BooksManagementService.DataTransferObjects.BookDto.Description*
  name: Description
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_Description_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookDto.Description
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookDto.Description
  nameWithType: BookDto.Description
- uid: BooksManagementService.DataTransferObjects.BookDto.Genre
  name: Genre
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_Genre
  commentId: P:BooksManagementService.DataTransferObjects.BookDto.Genre
  fullName: BooksManagementService.DataTransferObjects.BookDto.Genre
  nameWithType: BookDto.Genre
- uid: BooksManagementService.DataTransferObjects.BookDto.Genre*
  name: Genre
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_Genre_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookDto.Genre
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookDto.Genre
  nameWithType: BookDto.Genre
- uid: BooksManagementService.DataTransferObjects.BookDto.ISBN
  name: ISBN
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_ISBN
  commentId: P:BooksManagementService.DataTransferObjects.BookDto.ISBN
  fullName: BooksManagementService.DataTransferObjects.BookDto.ISBN
  nameWithType: BookDto.ISBN
- uid: BooksManagementService.DataTransferObjects.BookDto.ISBN*
  name: ISBN
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_ISBN_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookDto.ISBN
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookDto.ISBN
  nameWithType: BookDto.ISBN
- uid: BooksManagementService.DataTransferObjects.BookDto.Id
  name: Id
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_Id
  commentId: P:BooksManagementService.DataTransferObjects.BookDto.Id
  fullName: BooksManagementService.DataTransferObjects.BookDto.Id
  nameWithType: BookDto.Id
- uid: BooksManagementService.DataTransferObjects.BookDto.Id*
  name: Id
  href: api/BooksManagementService.DataTransferObjects.BookDto.html#BooksManagementService_DataTransferObjects_BookDto_Id_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookDto.Id
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookDto.Id
  nameWithType: BookDto.Id
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto
  name: BookForCreationDto
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html
  commentId: T:BooksManagementService.DataTransferObjects.BookForCreationDto
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto
  nameWithType: BookForCreationDto
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.Amount
  name: Amount
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_Amount
  commentId: P:BooksManagementService.DataTransferObjects.BookForCreationDto.Amount
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.Amount
  nameWithType: BookForCreationDto.Amount
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.Amount*
  name: Amount
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_Amount_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForCreationDto.Amount
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.Amount
  nameWithType: BookForCreationDto.Amount
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorLastName
  name: AuthorLastName
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_AuthorLastName
  commentId: P:BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorLastName
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorLastName
  nameWithType: BookForCreationDto.AuthorLastName
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorLastName*
  name: AuthorLastName
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_AuthorLastName_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorLastName
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorLastName
  nameWithType: BookForCreationDto.AuthorLastName
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorName
  name: AuthorName
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_AuthorName
  commentId: P:BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorName
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorName
  nameWithType: BookForCreationDto.AuthorName
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorName*
  name: AuthorName
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_AuthorName_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorName
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.AuthorName
  nameWithType: BookForCreationDto.AuthorName
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.BookTitle
  name: BookTitle
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_BookTitle
  commentId: P:BooksManagementService.DataTransferObjects.BookForCreationDto.BookTitle
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.BookTitle
  nameWithType: BookForCreationDto.BookTitle
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.BookTitle*
  name: BookTitle
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_BookTitle_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForCreationDto.BookTitle
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.BookTitle
  nameWithType: BookForCreationDto.BookTitle
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.Description
  name: Description
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_Description
  commentId: P:BooksManagementService.DataTransferObjects.BookForCreationDto.Description
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.Description
  nameWithType: BookForCreationDto.Description
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.Description*
  name: Description
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_Description_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForCreationDto.Description
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.Description
  nameWithType: BookForCreationDto.Description
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.Genre
  name: Genre
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_Genre
  commentId: P:BooksManagementService.DataTransferObjects.BookForCreationDto.Genre
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.Genre
  nameWithType: BookForCreationDto.Genre
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.Genre*
  name: Genre
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_Genre_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForCreationDto.Genre
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.Genre
  nameWithType: BookForCreationDto.Genre
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.ISBN
  name: ISBN
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_ISBN
  commentId: P:BooksManagementService.DataTransferObjects.BookForCreationDto.ISBN
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.ISBN
  nameWithType: BookForCreationDto.ISBN
- uid: BooksManagementService.DataTransferObjects.BookForCreationDto.ISBN*
  name: ISBN
  href: api/BooksManagementService.DataTransferObjects.BookForCreationDto.html#BooksManagementService_DataTransferObjects_BookForCreationDto_ISBN_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForCreationDto.ISBN
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForCreationDto.ISBN
  nameWithType: BookForCreationDto.ISBN
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto
  name: BookForUpdateDto
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html
  commentId: T:BooksManagementService.DataTransferObjects.BookForUpdateDto
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto
  nameWithType: BookForUpdateDto
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.Amount
  name: Amount
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_Amount
  commentId: P:BooksManagementService.DataTransferObjects.BookForUpdateDto.Amount
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.Amount
  nameWithType: BookForUpdateDto.Amount
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.Amount*
  name: Amount
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_Amount_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForUpdateDto.Amount
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.Amount
  nameWithType: BookForUpdateDto.Amount
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorLastName
  name: AuthorLastName
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_AuthorLastName
  commentId: P:BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorLastName
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorLastName
  nameWithType: BookForUpdateDto.AuthorLastName
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorLastName*
  name: AuthorLastName
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_AuthorLastName_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorLastName
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorLastName
  nameWithType: BookForUpdateDto.AuthorLastName
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorName
  name: AuthorName
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_AuthorName
  commentId: P:BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorName
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorName
  nameWithType: BookForUpdateDto.AuthorName
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorName*
  name: AuthorName
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_AuthorName_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorName
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.AuthorName
  nameWithType: BookForUpdateDto.AuthorName
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.BookTitle
  name: BookTitle
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_BookTitle
  commentId: P:BooksManagementService.DataTransferObjects.BookForUpdateDto.BookTitle
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.BookTitle
  nameWithType: BookForUpdateDto.BookTitle
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.BookTitle*
  name: BookTitle
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_BookTitle_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForUpdateDto.BookTitle
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.BookTitle
  nameWithType: BookForUpdateDto.BookTitle
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.Description
  name: Description
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_Description
  commentId: P:BooksManagementService.DataTransferObjects.BookForUpdateDto.Description
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.Description
  nameWithType: BookForUpdateDto.Description
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.Description*
  name: Description
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_Description_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForUpdateDto.Description
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.Description
  nameWithType: BookForUpdateDto.Description
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.Genre
  name: Genre
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_Genre
  commentId: P:BooksManagementService.DataTransferObjects.BookForUpdateDto.Genre
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.Genre
  nameWithType: BookForUpdateDto.Genre
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.Genre*
  name: Genre
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_Genre_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForUpdateDto.Genre
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.Genre
  nameWithType: BookForUpdateDto.Genre
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.ISBN
  name: ISBN
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_ISBN
  commentId: P:BooksManagementService.DataTransferObjects.BookForUpdateDto.ISBN
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.ISBN
  nameWithType: BookForUpdateDto.ISBN
- uid: BooksManagementService.DataTransferObjects.BookForUpdateDto.ISBN*
  name: ISBN
  href: api/BooksManagementService.DataTransferObjects.BookForUpdateDto.html#BooksManagementService_DataTransferObjects_BookForUpdateDto_ISBN_
  commentId: Overload:BooksManagementService.DataTransferObjects.BookForUpdateDto.ISBN
  isSpec: "True"
  fullName: BooksManagementService.DataTransferObjects.BookForUpdateDto.ISBN
  nameWithType: BookForUpdateDto.ISBN
- uid: BooksManagementService.Extensions
  name: BooksManagementService.Extensions
  href: api/BooksManagementService.Extensions.html
  commentId: N:BooksManagementService.Extensions
  fullName: BooksManagementService.Extensions
  nameWithType: BooksManagementService.Extensions
- uid: BooksManagementService.Extensions.ServiceExtensions
  name: ServiceExtensions
  href: api/BooksManagementService.Extensions.ServiceExtensions.html
  commentId: T:BooksManagementService.Extensions.ServiceExtensions
  fullName: BooksManagementService.Extensions.ServiceExtensions
  nameWithType: ServiceExtensions
- uid: BooksManagementService.Extensions.ServiceExtensions.ConfigureRepositoryManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: ConfigureRepositoryManager(IServiceCollection)
  href: api/BooksManagementService.Extensions.ServiceExtensions.html#BooksManagementService_Extensions_ServiceExtensions_ConfigureRepositoryManager_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:BooksManagementService.Extensions.ServiceExtensions.ConfigureRepositoryManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: BooksManagementService.Extensions.ServiceExtensions.ConfigureRepositoryManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceExtensions.ConfigureRepositoryManager(IServiceCollection)
- uid: BooksManagementService.Extensions.ServiceExtensions.ConfigureRepositoryManager*
  name: ConfigureRepositoryManager
  href: api/BooksManagementService.Extensions.ServiceExtensions.html#BooksManagementService_Extensions_ServiceExtensions_ConfigureRepositoryManager_
  commentId: Overload:BooksManagementService.Extensions.ServiceExtensions.ConfigureRepositoryManager
  isSpec: "True"
  fullName: BooksManagementService.Extensions.ServiceExtensions.ConfigureRepositoryManager
  nameWithType: ServiceExtensions.ConfigureRepositoryManager
- uid: BooksManagementService.Extensions.ServiceExtensions.ConfigureSqlContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: ConfigureSqlContext(IServiceCollection, IConfiguration)
  href: api/BooksManagementService.Extensions.ServiceExtensions.html#BooksManagementService_Extensions_ServiceExtensions_ConfigureSqlContext_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:BooksManagementService.Extensions.ServiceExtensions.ConfigureSqlContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: BooksManagementService.Extensions.ServiceExtensions.ConfigureSqlContext(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ServiceExtensions.ConfigureSqlContext(IServiceCollection, IConfiguration)
- uid: BooksManagementService.Extensions.ServiceExtensions.ConfigureSqlContext*
  name: ConfigureSqlContext
  href: api/BooksManagementService.Extensions.ServiceExtensions.html#BooksManagementService_Extensions_ServiceExtensions_ConfigureSqlContext_
  commentId: Overload:BooksManagementService.Extensions.ServiceExtensions.ConfigureSqlContext
  isSpec: "True"
  fullName: BooksManagementService.Extensions.ServiceExtensions.ConfigureSqlContext
  nameWithType: ServiceExtensions.ConfigureSqlContext
- uid: BooksManagementService.Mapping
  name: Mapping
  href: api/BooksManagementService.Mapping.html
  commentId: T:BooksManagementService.Mapping
  fullName: BooksManagementService.Mapping
  nameWithType: Mapping
- uid: BooksManagementService.Mapping.#ctor
  name: Mapping()
  href: api/BooksManagementService.Mapping.html#BooksManagementService_Mapping__ctor
  commentId: M:BooksManagementService.Mapping.#ctor
  name.vb: New()
  fullName: BooksManagementService.Mapping.Mapping()
  fullName.vb: BooksManagementService.Mapping.New()
  nameWithType: Mapping.Mapping()
  nameWithType.vb: Mapping.New()
- uid: BooksManagementService.Mapping.#ctor*
  name: Mapping
  href: api/BooksManagementService.Mapping.html#BooksManagementService_Mapping__ctor_
  commentId: Overload:BooksManagementService.Mapping.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BooksManagementService.Mapping.Mapping
  fullName.vb: BooksManagementService.Mapping.New
  nameWithType: Mapping.Mapping
  nameWithType.vb: Mapping.New
- uid: BooksManagementService.Migrations
  name: BooksManagementService.Migrations
  href: api/BooksManagementService.Migrations.html
  commentId: N:BooksManagementService.Migrations
  fullName: BooksManagementService.Migrations
  nameWithType: BooksManagementService.Migrations
- uid: BooksManagementService.Migrations.InitialCreate1
  name: InitialCreate1
  href: api/BooksManagementService.Migrations.InitialCreate1.html
  commentId: T:BooksManagementService.Migrations.InitialCreate1
  fullName: BooksManagementService.Migrations.InitialCreate1
  nameWithType: InitialCreate1
- uid: BooksManagementService.Migrations.InitialCreate1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BooksManagementService.Migrations.InitialCreate1.html#BooksManagementService_Migrations_InitialCreate1_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BooksManagementService.Migrations.InitialCreate1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BooksManagementService.Migrations.InitialCreate1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InitialCreate1.BuildTargetModel(ModelBuilder)
- uid: BooksManagementService.Migrations.InitialCreate1.BuildTargetModel*
  name: BuildTargetModel
  href: api/BooksManagementService.Migrations.InitialCreate1.html#BooksManagementService_Migrations_InitialCreate1_BuildTargetModel_
  commentId: Overload:BooksManagementService.Migrations.InitialCreate1.BuildTargetModel
  isSpec: "True"
  fullName: BooksManagementService.Migrations.InitialCreate1.BuildTargetModel
  nameWithType: InitialCreate1.BuildTargetModel
- uid: BooksManagementService.Migrations.InitialCreate1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BooksManagementService.Migrations.InitialCreate1.html#BooksManagementService_Migrations_InitialCreate1_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BooksManagementService.Migrations.InitialCreate1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BooksManagementService.Migrations.InitialCreate1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialCreate1.Down(MigrationBuilder)
- uid: BooksManagementService.Migrations.InitialCreate1.Down*
  name: Down
  href: api/BooksManagementService.Migrations.InitialCreate1.html#BooksManagementService_Migrations_InitialCreate1_Down_
  commentId: Overload:BooksManagementService.Migrations.InitialCreate1.Down
  isSpec: "True"
  fullName: BooksManagementService.Migrations.InitialCreate1.Down
  nameWithType: InitialCreate1.Down
- uid: BooksManagementService.Migrations.InitialCreate1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BooksManagementService.Migrations.InitialCreate1.html#BooksManagementService_Migrations_InitialCreate1_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BooksManagementService.Migrations.InitialCreate1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BooksManagementService.Migrations.InitialCreate1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialCreate1.Up(MigrationBuilder)
- uid: BooksManagementService.Migrations.InitialCreate1.Up*
  name: Up
  href: api/BooksManagementService.Migrations.InitialCreate1.html#BooksManagementService_Migrations_InitialCreate1_Up_
  commentId: Overload:BooksManagementService.Migrations.InitialCreate1.Up
  isSpec: "True"
  fullName: BooksManagementService.Migrations.InitialCreate1.Up
  nameWithType: InitialCreate1.Up
- uid: BooksManagementService.Models
  name: BooksManagementService.Models
  href: api/BooksManagementService.Models.html
  commentId: N:BooksManagementService.Models
  fullName: BooksManagementService.Models
  nameWithType: BooksManagementService.Models
- uid: BooksManagementService.Models.Book
  name: Book
  href: api/BooksManagementService.Models.Book.html
  commentId: T:BooksManagementService.Models.Book
  fullName: BooksManagementService.Models.Book
  nameWithType: Book
- uid: BooksManagementService.Models.Book.Amount
  name: Amount
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Amount
  commentId: P:BooksManagementService.Models.Book.Amount
  fullName: BooksManagementService.Models.Book.Amount
  nameWithType: Book.Amount
- uid: BooksManagementService.Models.Book.Amount*
  name: Amount
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Amount_
  commentId: Overload:BooksManagementService.Models.Book.Amount
  isSpec: "True"
  fullName: BooksManagementService.Models.Book.Amount
  nameWithType: Book.Amount
- uid: BooksManagementService.Models.Book.AuthorLastName
  name: AuthorLastName
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_AuthorLastName
  commentId: P:BooksManagementService.Models.Book.AuthorLastName
  fullName: BooksManagementService.Models.Book.AuthorLastName
  nameWithType: Book.AuthorLastName
- uid: BooksManagementService.Models.Book.AuthorLastName*
  name: AuthorLastName
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_AuthorLastName_
  commentId: Overload:BooksManagementService.Models.Book.AuthorLastName
  isSpec: "True"
  fullName: BooksManagementService.Models.Book.AuthorLastName
  nameWithType: Book.AuthorLastName
- uid: BooksManagementService.Models.Book.AuthorName
  name: AuthorName
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_AuthorName
  commentId: P:BooksManagementService.Models.Book.AuthorName
  fullName: BooksManagementService.Models.Book.AuthorName
  nameWithType: Book.AuthorName
- uid: BooksManagementService.Models.Book.AuthorName*
  name: AuthorName
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_AuthorName_
  commentId: Overload:BooksManagementService.Models.Book.AuthorName
  isSpec: "True"
  fullName: BooksManagementService.Models.Book.AuthorName
  nameWithType: Book.AuthorName
- uid: BooksManagementService.Models.Book.BookTitle
  name: BookTitle
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_BookTitle
  commentId: P:BooksManagementService.Models.Book.BookTitle
  fullName: BooksManagementService.Models.Book.BookTitle
  nameWithType: Book.BookTitle
- uid: BooksManagementService.Models.Book.BookTitle*
  name: BookTitle
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_BookTitle_
  commentId: Overload:BooksManagementService.Models.Book.BookTitle
  isSpec: "True"
  fullName: BooksManagementService.Models.Book.BookTitle
  nameWithType: Book.BookTitle
- uid: BooksManagementService.Models.Book.Description
  name: Description
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Description
  commentId: P:BooksManagementService.Models.Book.Description
  fullName: BooksManagementService.Models.Book.Description
  nameWithType: Book.Description
- uid: BooksManagementService.Models.Book.Description*
  name: Description
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Description_
  commentId: Overload:BooksManagementService.Models.Book.Description
  isSpec: "True"
  fullName: BooksManagementService.Models.Book.Description
  nameWithType: Book.Description
- uid: BooksManagementService.Models.Book.Genre
  name: Genre
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Genre
  commentId: P:BooksManagementService.Models.Book.Genre
  fullName: BooksManagementService.Models.Book.Genre
  nameWithType: Book.Genre
- uid: BooksManagementService.Models.Book.Genre*
  name: Genre
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Genre_
  commentId: Overload:BooksManagementService.Models.Book.Genre
  isSpec: "True"
  fullName: BooksManagementService.Models.Book.Genre
  nameWithType: Book.Genre
- uid: BooksManagementService.Models.Book.ISBN
  name: ISBN
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_ISBN
  commentId: P:BooksManagementService.Models.Book.ISBN
  fullName: BooksManagementService.Models.Book.ISBN
  nameWithType: Book.ISBN
- uid: BooksManagementService.Models.Book.ISBN*
  name: ISBN
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_ISBN_
  commentId: Overload:BooksManagementService.Models.Book.ISBN
  isSpec: "True"
  fullName: BooksManagementService.Models.Book.ISBN
  nameWithType: Book.ISBN
- uid: BooksManagementService.Models.Book.Id
  name: Id
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Id
  commentId: P:BooksManagementService.Models.Book.Id
  fullName: BooksManagementService.Models.Book.Id
  nameWithType: Book.Id
- uid: BooksManagementService.Models.Book.Id*
  name: Id
  href: api/BooksManagementService.Models.Book.html#BooksManagementService_Models_Book_Id_
  commentId: Overload:BooksManagementService.Models.Book.Id
  isSpec: "True"
  fullName: BooksManagementService.Models.Book.Id
  nameWithType: Book.Id
- uid: BooksManagementService.Models.BookGenre
  name: BookGenre
  href: api/BooksManagementService.Models.BookGenre.html
  commentId: T:BooksManagementService.Models.BookGenre
  fullName: BooksManagementService.Models.BookGenre
  nameWithType: BookGenre
- uid: BooksManagementService.Models.BookGenre.Adventures
  name: Adventures
  href: api/BooksManagementService.Models.BookGenre.html#BooksManagementService_Models_BookGenre_Adventures
  commentId: F:BooksManagementService.Models.BookGenre.Adventures
  fullName: BooksManagementService.Models.BookGenre.Adventures
  nameWithType: BookGenre.Adventures
- uid: BooksManagementService.Models.BookGenre.All
  name: All
  href: api/BooksManagementService.Models.BookGenre.html#BooksManagementService_Models_BookGenre_All
  commentId: F:BooksManagementService.Models.BookGenre.All
  fullName: BooksManagementService.Models.BookGenre.All
  nameWithType: BookGenre.All
- uid: BooksManagementService.Models.BookGenre.FairyTales
  name: FairyTales
  href: api/BooksManagementService.Models.BookGenre.html#BooksManagementService_Models_BookGenre_FairyTales
  commentId: F:BooksManagementService.Models.BookGenre.FairyTales
  fullName: BooksManagementService.Models.BookGenre.FairyTales
  nameWithType: BookGenre.FairyTales
- uid: BooksManagementService.Models.BookGenre.Horrors
  name: Horrors
  href: api/BooksManagementService.Models.BookGenre.html#BooksManagementService_Models_BookGenre_Horrors
  commentId: F:BooksManagementService.Models.BookGenre.Horrors
  fullName: BooksManagementService.Models.BookGenre.Horrors
  nameWithType: BookGenre.Horrors
- uid: BooksManagementService.Models.BookGenre.LoveStories
  name: LoveStories
  href: api/BooksManagementService.Models.BookGenre.html#BooksManagementService_Models_BookGenre_LoveStories
  commentId: F:BooksManagementService.Models.BookGenre.LoveStories
  fullName: BooksManagementService.Models.BookGenre.LoveStories
  nameWithType: BookGenre.LoveStories
- uid: BooksManagementService.RabbitMq
  name: BooksManagementService.RabbitMq
  href: api/BooksManagementService.RabbitMq.html
  commentId: N:BooksManagementService.RabbitMq
  fullName: BooksManagementService.RabbitMq
  nameWithType: BooksManagementService.RabbitMq
- uid: BooksManagementService.RabbitMq.RabbitMqListener
  name: RabbitMqListener
  href: api/BooksManagementService.RabbitMq.RabbitMqListener.html
  commentId: T:BooksManagementService.RabbitMq.RabbitMqListener
  fullName: BooksManagementService.RabbitMq.RabbitMqListener
  nameWithType: RabbitMqListener
- uid: BooksManagementService.RabbitMq.RabbitMqListener.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: RabbitMqListener(IConfiguration)
  href: api/BooksManagementService.RabbitMq.RabbitMqListener.html#BooksManagementService_RabbitMq_RabbitMqListener__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:BooksManagementService.RabbitMq.RabbitMqListener.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
  fullName: BooksManagementService.RabbitMq.RabbitMqListener.RabbitMqListener(Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: BooksManagementService.RabbitMq.RabbitMqListener.New(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: RabbitMqListener.RabbitMqListener(IConfiguration)
  nameWithType.vb: RabbitMqListener.New(IConfiguration)
- uid: BooksManagementService.RabbitMq.RabbitMqListener.#ctor*
  name: RabbitMqListener
  href: api/BooksManagementService.RabbitMq.RabbitMqListener.html#BooksManagementService_RabbitMq_RabbitMqListener__ctor_
  commentId: Overload:BooksManagementService.RabbitMq.RabbitMqListener.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BooksManagementService.RabbitMq.RabbitMqListener.RabbitMqListener
  fullName.vb: BooksManagementService.RabbitMq.RabbitMqListener.New
  nameWithType: RabbitMqListener.RabbitMqListener
  nameWithType.vb: RabbitMqListener.New
- uid: BooksManagementService.RabbitMq.RabbitMqListener.Dispose
  name: Dispose()
  href: api/BooksManagementService.RabbitMq.RabbitMqListener.html#BooksManagementService_RabbitMq_RabbitMqListener_Dispose
  commentId: M:BooksManagementService.RabbitMq.RabbitMqListener.Dispose
  fullName: BooksManagementService.RabbitMq.RabbitMqListener.Dispose()
  nameWithType: RabbitMqListener.Dispose()
- uid: BooksManagementService.RabbitMq.RabbitMqListener.Dispose*
  name: Dispose
  href: api/BooksManagementService.RabbitMq.RabbitMqListener.html#BooksManagementService_RabbitMq_RabbitMqListener_Dispose_
  commentId: Overload:BooksManagementService.RabbitMq.RabbitMqListener.Dispose
  isSpec: "True"
  fullName: BooksManagementService.RabbitMq.RabbitMqListener.Dispose
  nameWithType: RabbitMqListener.Dispose
- uid: BooksManagementService.RabbitMq.RabbitMqListener.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/BooksManagementService.RabbitMq.RabbitMqListener.html#BooksManagementService_RabbitMq_RabbitMqListener_ExecuteAsync_System_Threading_CancellationToken_
  commentId: M:BooksManagementService.RabbitMq.RabbitMqListener.ExecuteAsync(System.Threading.CancellationToken)
  fullName: BooksManagementService.RabbitMq.RabbitMqListener.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType: RabbitMqListener.ExecuteAsync(CancellationToken)
- uid: BooksManagementService.RabbitMq.RabbitMqListener.ExecuteAsync*
  name: ExecuteAsync
  href: api/BooksManagementService.RabbitMq.RabbitMqListener.html#BooksManagementService_RabbitMq_RabbitMqListener_ExecuteAsync_
  commentId: Overload:BooksManagementService.RabbitMq.RabbitMqListener.ExecuteAsync
  isSpec: "True"
  fullName: BooksManagementService.RabbitMq.RabbitMqListener.ExecuteAsync
  nameWithType: RabbitMqListener.ExecuteAsync
- uid: Contracts
  name: Contracts
  href: api/Contracts.html
  commentId: N:Contracts
  fullName: Contracts
  nameWithType: Contracts
- uid: Contracts.IBookRepository
  name: IBookRepository
  href: api/Contracts.IBookRepository.html
  commentId: T:Contracts.IBookRepository
  fullName: Contracts.IBookRepository
  nameWithType: IBookRepository
- uid: Contracts.IBookRepository.CountBooksAsync(Entities.RequestFeatures.BookParameters)
  name: CountBooksAsync(BookParameters)
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_CountBooksAsync_Entities_RequestFeatures_BookParameters_
  commentId: M:Contracts.IBookRepository.CountBooksAsync(Entities.RequestFeatures.BookParameters)
  fullName: Contracts.IBookRepository.CountBooksAsync(Entities.RequestFeatures.BookParameters)
  nameWithType: IBookRepository.CountBooksAsync(BookParameters)
- uid: Contracts.IBookRepository.CountBooksAsync*
  name: CountBooksAsync
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_CountBooksAsync_
  commentId: Overload:Contracts.IBookRepository.CountBooksAsync
  isSpec: "True"
  fullName: Contracts.IBookRepository.CountBooksAsync
  nameWithType: IBookRepository.CountBooksAsync
- uid: Contracts.IBookRepository.CreateBook(BooksManagementService.Models.Book)
  name: CreateBook(Book)
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_CreateBook_BooksManagementService_Models_Book_
  commentId: M:Contracts.IBookRepository.CreateBook(BooksManagementService.Models.Book)
  fullName: Contracts.IBookRepository.CreateBook(BooksManagementService.Models.Book)
  nameWithType: IBookRepository.CreateBook(Book)
- uid: Contracts.IBookRepository.CreateBook*
  name: CreateBook
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_CreateBook_
  commentId: Overload:Contracts.IBookRepository.CreateBook
  isSpec: "True"
  fullName: Contracts.IBookRepository.CreateBook
  nameWithType: IBookRepository.CreateBook
- uid: Contracts.IBookRepository.DeleteBook(BooksManagementService.Models.Book)
  name: DeleteBook(Book)
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_DeleteBook_BooksManagementService_Models_Book_
  commentId: M:Contracts.IBookRepository.DeleteBook(BooksManagementService.Models.Book)
  fullName: Contracts.IBookRepository.DeleteBook(BooksManagementService.Models.Book)
  nameWithType: IBookRepository.DeleteBook(Book)
- uid: Contracts.IBookRepository.DeleteBook*
  name: DeleteBook
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_DeleteBook_
  commentId: Overload:Contracts.IBookRepository.DeleteBook
  isSpec: "True"
  fullName: Contracts.IBookRepository.DeleteBook
  nameWithType: IBookRepository.DeleteBook
- uid: Contracts.IBookRepository.GetAllBooksAsync(Entities.RequestFeatures.BookParameters,System.Boolean)
  name: GetAllBooksAsync(BookParameters, bool)
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_GetAllBooksAsync_Entities_RequestFeatures_BookParameters_System_Boolean_
  commentId: M:Contracts.IBookRepository.GetAllBooksAsync(Entities.RequestFeatures.BookParameters,System.Boolean)
  name.vb: GetAllBooksAsync(BookParameters, Boolean)
  fullName: Contracts.IBookRepository.GetAllBooksAsync(Entities.RequestFeatures.BookParameters, bool)
  fullName.vb: Contracts.IBookRepository.GetAllBooksAsync(Entities.RequestFeatures.BookParameters, Boolean)
  nameWithType: IBookRepository.GetAllBooksAsync(BookParameters, bool)
  nameWithType.vb: IBookRepository.GetAllBooksAsync(BookParameters, Boolean)
- uid: Contracts.IBookRepository.GetAllBooksAsync*
  name: GetAllBooksAsync
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_GetAllBooksAsync_
  commentId: Overload:Contracts.IBookRepository.GetAllBooksAsync
  isSpec: "True"
  fullName: Contracts.IBookRepository.GetAllBooksAsync
  nameWithType: IBookRepository.GetAllBooksAsync
- uid: Contracts.IBookRepository.GetBookAsync(System.Int32,System.Boolean)
  name: GetBookAsync(int, bool)
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_GetBookAsync_System_Int32_System_Boolean_
  commentId: M:Contracts.IBookRepository.GetBookAsync(System.Int32,System.Boolean)
  name.vb: GetBookAsync(Integer, Boolean)
  fullName: Contracts.IBookRepository.GetBookAsync(int, bool)
  fullName.vb: Contracts.IBookRepository.GetBookAsync(Integer, Boolean)
  nameWithType: IBookRepository.GetBookAsync(int, bool)
  nameWithType.vb: IBookRepository.GetBookAsync(Integer, Boolean)
- uid: Contracts.IBookRepository.GetBookAsync*
  name: GetBookAsync
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_GetBookAsync_
  commentId: Overload:Contracts.IBookRepository.GetBookAsync
  isSpec: "True"
  fullName: Contracts.IBookRepository.GetBookAsync
  nameWithType: IBookRepository.GetBookAsync
- uid: Contracts.IBookRepository.GetBookByISBNAsync(System.String,System.Boolean)
  name: GetBookByISBNAsync(string, bool)
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_GetBookByISBNAsync_System_String_System_Boolean_
  commentId: M:Contracts.IBookRepository.GetBookByISBNAsync(System.String,System.Boolean)
  name.vb: GetBookByISBNAsync(String, Boolean)
  fullName: Contracts.IBookRepository.GetBookByISBNAsync(string, bool)
  fullName.vb: Contracts.IBookRepository.GetBookByISBNAsync(String, Boolean)
  nameWithType: IBookRepository.GetBookByISBNAsync(string, bool)
  nameWithType.vb: IBookRepository.GetBookByISBNAsync(String, Boolean)
- uid: Contracts.IBookRepository.GetBookByISBNAsync*
  name: GetBookByISBNAsync
  href: api/Contracts.IBookRepository.html#Contracts_IBookRepository_GetBookByISBNAsync_
  commentId: Overload:Contracts.IBookRepository.GetBookByISBNAsync
  isSpec: "True"
  fullName: Contracts.IBookRepository.GetBookByISBNAsync
  nameWithType: IBookRepository.GetBookByISBNAsync
- uid: Contracts.IRepositoryBase`1
  name: IRepositoryBase<T>
  href: api/Contracts.IRepositoryBase-1.html
  commentId: T:Contracts.IRepositoryBase`1
  name.vb: IRepositoryBase(Of T)
  fullName: Contracts.IRepositoryBase<T>
  fullName.vb: Contracts.IRepositoryBase(Of T)
  nameWithType: IRepositoryBase<T>
  nameWithType.vb: IRepositoryBase(Of T)
- uid: Contracts.IRepositoryBase`1.Create(`0)
  name: Create(T)
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_Create__0_
  commentId: M:Contracts.IRepositoryBase`1.Create(`0)
  fullName: Contracts.IRepositoryBase<T>.Create(T)
  fullName.vb: Contracts.IRepositoryBase(Of T).Create(T)
  nameWithType: IRepositoryBase<T>.Create(T)
  nameWithType.vb: IRepositoryBase(Of T).Create(T)
- uid: Contracts.IRepositoryBase`1.Create*
  name: Create
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_Create_
  commentId: Overload:Contracts.IRepositoryBase`1.Create
  isSpec: "True"
  fullName: Contracts.IRepositoryBase<T>.Create
  fullName.vb: Contracts.IRepositoryBase(Of T).Create
  nameWithType: IRepositoryBase<T>.Create
  nameWithType.vb: IRepositoryBase(Of T).Create
- uid: Contracts.IRepositoryBase`1.Delete(`0)
  name: Delete(T)
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_Delete__0_
  commentId: M:Contracts.IRepositoryBase`1.Delete(`0)
  fullName: Contracts.IRepositoryBase<T>.Delete(T)
  fullName.vb: Contracts.IRepositoryBase(Of T).Delete(T)
  nameWithType: IRepositoryBase<T>.Delete(T)
  nameWithType.vb: IRepositoryBase(Of T).Delete(T)
- uid: Contracts.IRepositoryBase`1.Delete*
  name: Delete
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_Delete_
  commentId: Overload:Contracts.IRepositoryBase`1.Delete
  isSpec: "True"
  fullName: Contracts.IRepositoryBase<T>.Delete
  fullName.vb: Contracts.IRepositoryBase(Of T).Delete
  nameWithType: IRepositoryBase<T>.Delete
  nameWithType.vb: IRepositoryBase(Of T).Delete
- uid: Contracts.IRepositoryBase`1.FindAll(System.Boolean)
  name: FindAll(bool)
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_FindAll_System_Boolean_
  commentId: M:Contracts.IRepositoryBase`1.FindAll(System.Boolean)
  name.vb: FindAll(Boolean)
  fullName: Contracts.IRepositoryBase<T>.FindAll(bool)
  fullName.vb: Contracts.IRepositoryBase(Of T).FindAll(Boolean)
  nameWithType: IRepositoryBase<T>.FindAll(bool)
  nameWithType.vb: IRepositoryBase(Of T).FindAll(Boolean)
- uid: Contracts.IRepositoryBase`1.FindAll*
  name: FindAll
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_FindAll_
  commentId: Overload:Contracts.IRepositoryBase`1.FindAll
  isSpec: "True"
  fullName: Contracts.IRepositoryBase<T>.FindAll
  fullName.vb: Contracts.IRepositoryBase(Of T).FindAll
  nameWithType: IRepositoryBase<T>.FindAll
  nameWithType.vb: IRepositoryBase(Of T).FindAll
- uid: Contracts.IRepositoryBase`1.FindByCondition(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  name: FindByCondition(Expression<Func<T, bool>>, bool)
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_FindByCondition_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  commentId: M:Contracts.IRepositoryBase`1.FindByCondition(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  name.vb: FindByCondition(Expression(Of Func(Of T, Boolean)), Boolean)
  fullName: Contracts.IRepositoryBase<T>.FindByCondition(System.Linq.Expressions.Expression<System.Func<T, bool>>, bool)
  fullName.vb: Contracts.IRepositoryBase(Of T).FindByCondition(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Boolean)
  nameWithType: IRepositoryBase<T>.FindByCondition(Expression<Func<T, bool>>, bool)
  nameWithType.vb: IRepositoryBase(Of T).FindByCondition(Expression(Of Func(Of T, Boolean)), Boolean)
- uid: Contracts.IRepositoryBase`1.FindByCondition*
  name: FindByCondition
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_FindByCondition_
  commentId: Overload:Contracts.IRepositoryBase`1.FindByCondition
  isSpec: "True"
  fullName: Contracts.IRepositoryBase<T>.FindByCondition
  fullName.vb: Contracts.IRepositoryBase(Of T).FindByCondition
  nameWithType: IRepositoryBase<T>.FindByCondition
  nameWithType.vb: IRepositoryBase(Of T).FindByCondition
- uid: Contracts.IRepositoryBase`1.Update(`0)
  name: Update(T)
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_Update__0_
  commentId: M:Contracts.IRepositoryBase`1.Update(`0)
  fullName: Contracts.IRepositoryBase<T>.Update(T)
  fullName.vb: Contracts.IRepositoryBase(Of T).Update(T)
  nameWithType: IRepositoryBase<T>.Update(T)
  nameWithType.vb: IRepositoryBase(Of T).Update(T)
- uid: Contracts.IRepositoryBase`1.Update*
  name: Update
  href: api/Contracts.IRepositoryBase-1.html#Contracts_IRepositoryBase_1_Update_
  commentId: Overload:Contracts.IRepositoryBase`1.Update
  isSpec: "True"
  fullName: Contracts.IRepositoryBase<T>.Update
  fullName.vb: Contracts.IRepositoryBase(Of T).Update
  nameWithType: IRepositoryBase<T>.Update
  nameWithType.vb: IRepositoryBase(Of T).Update
- uid: Contracts.IRepositoryManager
  name: IRepositoryManager
  href: api/Contracts.IRepositoryManager.html
  commentId: T:Contracts.IRepositoryManager
  fullName: Contracts.IRepositoryManager
  nameWithType: IRepositoryManager
- uid: Contracts.IRepositoryManager.Book
  name: Book
  href: api/Contracts.IRepositoryManager.html#Contracts_IRepositoryManager_Book
  commentId: P:Contracts.IRepositoryManager.Book
  fullName: Contracts.IRepositoryManager.Book
  nameWithType: IRepositoryManager.Book
- uid: Contracts.IRepositoryManager.Book*
  name: Book
  href: api/Contracts.IRepositoryManager.html#Contracts_IRepositoryManager_Book_
  commentId: Overload:Contracts.IRepositoryManager.Book
  isSpec: "True"
  fullName: Contracts.IRepositoryManager.Book
  nameWithType: IRepositoryManager.Book
- uid: Contracts.IRepositoryManager.SaveAsync
  name: SaveAsync()
  href: api/Contracts.IRepositoryManager.html#Contracts_IRepositoryManager_SaveAsync
  commentId: M:Contracts.IRepositoryManager.SaveAsync
  fullName: Contracts.IRepositoryManager.SaveAsync()
  nameWithType: IRepositoryManager.SaveAsync()
- uid: Contracts.IRepositoryManager.SaveAsync*
  name: SaveAsync
  href: api/Contracts.IRepositoryManager.html#Contracts_IRepositoryManager_SaveAsync_
  commentId: Overload:Contracts.IRepositoryManager.SaveAsync
  isSpec: "True"
  fullName: Contracts.IRepositoryManager.SaveAsync
  nameWithType: IRepositoryManager.SaveAsync
- uid: Entities
  name: Entities
  href: api/Entities.html
  commentId: N:Entities
  fullName: Entities
  nameWithType: Entities
- uid: Entities.ApplicationContext
  name: ApplicationContext
  href: api/Entities.ApplicationContext.html
  commentId: T:Entities.ApplicationContext
  fullName: Entities.ApplicationContext
  nameWithType: ApplicationContext
- uid: Entities.ApplicationContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Entities.ApplicationContext})
  name: ApplicationContext(DbContextOptions<ApplicationContext>)
  href: api/Entities.ApplicationContext.html#Entities_ApplicationContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_Entities_ApplicationContext__
  commentId: M:Entities.ApplicationContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Entities.ApplicationContext})
  name.vb: New(DbContextOptions(Of ApplicationContext))
  fullName: Entities.ApplicationContext.ApplicationContext(Microsoft.EntityFrameworkCore.DbContextOptions<Entities.ApplicationContext>)
  fullName.vb: Entities.ApplicationContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of Entities.ApplicationContext))
  nameWithType: ApplicationContext.ApplicationContext(DbContextOptions<ApplicationContext>)
  nameWithType.vb: ApplicationContext.New(DbContextOptions(Of ApplicationContext))
- uid: Entities.ApplicationContext.#ctor*
  name: ApplicationContext
  href: api/Entities.ApplicationContext.html#Entities_ApplicationContext__ctor_
  commentId: Overload:Entities.ApplicationContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Entities.ApplicationContext.ApplicationContext
  fullName.vb: Entities.ApplicationContext.New
  nameWithType: ApplicationContext.ApplicationContext
  nameWithType.vb: ApplicationContext.New
- uid: Entities.ApplicationContext.Books
  name: Books
  href: api/Entities.ApplicationContext.html#Entities_ApplicationContext_Books
  commentId: P:Entities.ApplicationContext.Books
  fullName: Entities.ApplicationContext.Books
  nameWithType: ApplicationContext.Books
- uid: Entities.ApplicationContext.Books*
  name: Books
  href: api/Entities.ApplicationContext.html#Entities_ApplicationContext_Books_
  commentId: Overload:Entities.ApplicationContext.Books
  isSpec: "True"
  fullName: Entities.ApplicationContext.Books
  nameWithType: ApplicationContext.Books
- uid: Entities.ApplicationContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Entities.ApplicationContext.html#Entities_ApplicationContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Entities.ApplicationContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Entities.ApplicationContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: ApplicationContext.OnModelCreating(ModelBuilder)
- uid: Entities.ApplicationContext.OnModelCreating*
  name: OnModelCreating
  href: api/Entities.ApplicationContext.html#Entities_ApplicationContext_OnModelCreating_
  commentId: Overload:Entities.ApplicationContext.OnModelCreating
  isSpec: "True"
  fullName: Entities.ApplicationContext.OnModelCreating
  nameWithType: ApplicationContext.OnModelCreating
- uid: Entities.Configuration
  name: Entities.Configuration
  href: api/Entities.Configuration.html
  commentId: N:Entities.Configuration
  fullName: Entities.Configuration
  nameWithType: Entities.Configuration
- uid: Entities.Configuration.BookConfiguration
  name: BookConfiguration
  href: api/Entities.Configuration.BookConfiguration.html
  commentId: T:Entities.Configuration.BookConfiguration
  fullName: Entities.Configuration.BookConfiguration
  nameWithType: BookConfiguration
- uid: Entities.Configuration.BookConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{BooksManagementService.Models.Book})
  name: Configure(EntityTypeBuilder<Book>)
  href: api/Entities.Configuration.BookConfiguration.html#Entities_Configuration_BookConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_BooksManagementService_Models_Book__
  commentId: M:Entities.Configuration.BookConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{BooksManagementService.Models.Book})
  name.vb: Configure(EntityTypeBuilder(Of Book))
  fullName: Entities.Configuration.BookConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<BooksManagementService.Models.Book>)
  fullName.vb: Entities.Configuration.BookConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of BooksManagementService.Models.Book))
  nameWithType: BookConfiguration.Configure(EntityTypeBuilder<Book>)
  nameWithType.vb: BookConfiguration.Configure(EntityTypeBuilder(Of Book))
- uid: Entities.Configuration.BookConfiguration.Configure*
  name: Configure
  href: api/Entities.Configuration.BookConfiguration.html#Entities_Configuration_BookConfiguration_Configure_
  commentId: Overload:Entities.Configuration.BookConfiguration.Configure
  isSpec: "True"
  fullName: Entities.Configuration.BookConfiguration.Configure
  nameWithType: BookConfiguration.Configure
- uid: Entities.ErrorModel
  name: Entities.ErrorModel
  href: api/Entities.ErrorModel.html
  commentId: N:Entities.ErrorModel
  fullName: Entities.ErrorModel
  nameWithType: Entities.ErrorModel
- uid: Entities.ErrorModel.ErrorDetails
  name: ErrorDetails
  href: api/Entities.ErrorModel.ErrorDetails.html
  commentId: T:Entities.ErrorModel.ErrorDetails
  fullName: Entities.ErrorModel.ErrorDetails
  nameWithType: ErrorDetails
- uid: Entities.ErrorModel.ErrorDetails.Message
  name: Message
  href: api/Entities.ErrorModel.ErrorDetails.html#Entities_ErrorModel_ErrorDetails_Message
  commentId: P:Entities.ErrorModel.ErrorDetails.Message
  fullName: Entities.ErrorModel.ErrorDetails.Message
  nameWithType: ErrorDetails.Message
- uid: Entities.ErrorModel.ErrorDetails.Message*
  name: Message
  href: api/Entities.ErrorModel.ErrorDetails.html#Entities_ErrorModel_ErrorDetails_Message_
  commentId: Overload:Entities.ErrorModel.ErrorDetails.Message
  isSpec: "True"
  fullName: Entities.ErrorModel.ErrorDetails.Message
  nameWithType: ErrorDetails.Message
- uid: Entities.ErrorModel.ErrorDetails.StatusCode
  name: StatusCode
  href: api/Entities.ErrorModel.ErrorDetails.html#Entities_ErrorModel_ErrorDetails_StatusCode
  commentId: P:Entities.ErrorModel.ErrorDetails.StatusCode
  fullName: Entities.ErrorModel.ErrorDetails.StatusCode
  nameWithType: ErrorDetails.StatusCode
- uid: Entities.ErrorModel.ErrorDetails.StatusCode*
  name: StatusCode
  href: api/Entities.ErrorModel.ErrorDetails.html#Entities_ErrorModel_ErrorDetails_StatusCode_
  commentId: Overload:Entities.ErrorModel.ErrorDetails.StatusCode
  isSpec: "True"
  fullName: Entities.ErrorModel.ErrorDetails.StatusCode
  nameWithType: ErrorDetails.StatusCode
- uid: Entities.ErrorModel.ErrorDetails.ToString
  name: ToString()
  href: api/Entities.ErrorModel.ErrorDetails.html#Entities_ErrorModel_ErrorDetails_ToString
  commentId: M:Entities.ErrorModel.ErrorDetails.ToString
  fullName: Entities.ErrorModel.ErrorDetails.ToString()
  nameWithType: ErrorDetails.ToString()
- uid: Entities.ErrorModel.ErrorDetails.ToString*
  name: ToString
  href: api/Entities.ErrorModel.ErrorDetails.html#Entities_ErrorModel_ErrorDetails_ToString_
  commentId: Overload:Entities.ErrorModel.ErrorDetails.ToString
  isSpec: "True"
  fullName: Entities.ErrorModel.ErrorDetails.ToString
  nameWithType: ErrorDetails.ToString
- uid: Entities.RequestFeatures
  name: Entities.RequestFeatures
  href: api/Entities.RequestFeatures.html
  commentId: N:Entities.RequestFeatures
  fullName: Entities.RequestFeatures
  nameWithType: Entities.RequestFeatures
- uid: Entities.RequestFeatures.BookParameters
  name: BookParameters
  href: api/Entities.RequestFeatures.BookParameters.html
  commentId: T:Entities.RequestFeatures.BookParameters
  fullName: Entities.RequestFeatures.BookParameters
  nameWithType: BookParameters
- uid: Entities.RequestFeatures.BookParameters.Genre
  name: Genre
  href: api/Entities.RequestFeatures.BookParameters.html#Entities_RequestFeatures_BookParameters_Genre
  commentId: P:Entities.RequestFeatures.BookParameters.Genre
  fullName: Entities.RequestFeatures.BookParameters.Genre
  nameWithType: BookParameters.Genre
- uid: Entities.RequestFeatures.BookParameters.Genre*
  name: Genre
  href: api/Entities.RequestFeatures.BookParameters.html#Entities_RequestFeatures_BookParameters_Genre_
  commentId: Overload:Entities.RequestFeatures.BookParameters.Genre
  isSpec: "True"
  fullName: Entities.RequestFeatures.BookParameters.Genre
  nameWithType: BookParameters.Genre
- uid: Entities.RequestFeatures.BookParameters.SearchTerm
  name: SearchTerm
  href: api/Entities.RequestFeatures.BookParameters.html#Entities_RequestFeatures_BookParameters_SearchTerm
  commentId: P:Entities.RequestFeatures.BookParameters.SearchTerm
  fullName: Entities.RequestFeatures.BookParameters.SearchTerm
  nameWithType: BookParameters.SearchTerm
- uid: Entities.RequestFeatures.BookParameters.SearchTerm*
  name: SearchTerm
  href: api/Entities.RequestFeatures.BookParameters.html#Entities_RequestFeatures_BookParameters_SearchTerm_
  commentId: Overload:Entities.RequestFeatures.BookParameters.SearchTerm
  isSpec: "True"
  fullName: Entities.RequestFeatures.BookParameters.SearchTerm
  nameWithType: BookParameters.SearchTerm
- uid: Entities.RequestFeatures.RequestParameters
  name: RequestParameters
  href: api/Entities.RequestFeatures.RequestParameters.html
  commentId: T:Entities.RequestFeatures.RequestParameters
  fullName: Entities.RequestFeatures.RequestParameters
  nameWithType: RequestParameters
- uid: Entities.RequestFeatures.RequestParameters.PageNumber
  name: PageNumber
  href: api/Entities.RequestFeatures.RequestParameters.html#Entities_RequestFeatures_RequestParameters_PageNumber
  commentId: P:Entities.RequestFeatures.RequestParameters.PageNumber
  fullName: Entities.RequestFeatures.RequestParameters.PageNumber
  nameWithType: RequestParameters.PageNumber
- uid: Entities.RequestFeatures.RequestParameters.PageNumber*
  name: PageNumber
  href: api/Entities.RequestFeatures.RequestParameters.html#Entities_RequestFeatures_RequestParameters_PageNumber_
  commentId: Overload:Entities.RequestFeatures.RequestParameters.PageNumber
  isSpec: "True"
  fullName: Entities.RequestFeatures.RequestParameters.PageNumber
  nameWithType: RequestParameters.PageNumber
- uid: Entities.RequestFeatures.RequestParameters.PageSize
  name: PageSize
  href: api/Entities.RequestFeatures.RequestParameters.html#Entities_RequestFeatures_RequestParameters_PageSize
  commentId: P:Entities.RequestFeatures.RequestParameters.PageSize
  fullName: Entities.RequestFeatures.RequestParameters.PageSize
  nameWithType: RequestParameters.PageSize
- uid: Entities.RequestFeatures.RequestParameters.PageSize*
  name: PageSize
  href: api/Entities.RequestFeatures.RequestParameters.html#Entities_RequestFeatures_RequestParameters_PageSize_
  commentId: Overload:Entities.RequestFeatures.RequestParameters.PageSize
  isSpec: "True"
  fullName: Entities.RequestFeatures.RequestParameters.PageSize
  nameWithType: RequestParameters.PageSize
- uid: Library_Web_Application.Extensions
  name: Library_Web_Application.Extensions
  href: api/Library_Web_Application.Extensions.html
  commentId: N:Library_Web_Application.Extensions
  fullName: Library_Web_Application.Extensions
  nameWithType: Library_Web_Application.Extensions
- uid: Library_Web_Application.Extensions.ExceptionMiddlewareExtensions
  name: ExceptionMiddlewareExtensions
  href: api/Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.html
  commentId: T:Library_Web_Application.Extensions.ExceptionMiddlewareExtensions
  fullName: Library_Web_Application.Extensions.ExceptionMiddlewareExtensions
  nameWithType: ExceptionMiddlewareExtensions
- uid: Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.ConfigureExceptionHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  name: ConfigureExceptionHandler(IApplicationBuilder)
  href: api/Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.html#Library_Web_Application_Extensions_ExceptionMiddlewareExtensions_ConfigureExceptionHandler_Microsoft_AspNetCore_Builder_IApplicationBuilder_
  commentId: M:Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.ConfigureExceptionHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  fullName: Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.ConfigureExceptionHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  nameWithType: ExceptionMiddlewareExtensions.ConfigureExceptionHandler(IApplicationBuilder)
- uid: Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.ConfigureExceptionHandler*
  name: ConfigureExceptionHandler
  href: api/Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.html#Library_Web_Application_Extensions_ExceptionMiddlewareExtensions_ConfigureExceptionHandler_
  commentId: Overload:Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.ConfigureExceptionHandler
  isSpec: "True"
  fullName: Library_Web_Application.Extensions.ExceptionMiddlewareExtensions.ConfigureExceptionHandler
  nameWithType: ExceptionMiddlewareExtensions.ConfigureExceptionHandler
- uid: Repository
  name: Repository
  href: api/Repository.html
  commentId: N:Repository
  fullName: Repository
  nameWithType: Repository
- uid: Repository.BookRepository
  name: BookRepository
  href: api/Repository.BookRepository.html
  commentId: T:Repository.BookRepository
  fullName: Repository.BookRepository
  nameWithType: BookRepository
- uid: Repository.BookRepository.#ctor(Entities.ApplicationContext)
  name: BookRepository(ApplicationContext)
  href: api/Repository.BookRepository.html#Repository_BookRepository__ctor_Entities_ApplicationContext_
  commentId: M:Repository.BookRepository.#ctor(Entities.ApplicationContext)
  name.vb: New(ApplicationContext)
  fullName: Repository.BookRepository.BookRepository(Entities.ApplicationContext)
  fullName.vb: Repository.BookRepository.New(Entities.ApplicationContext)
  nameWithType: BookRepository.BookRepository(ApplicationContext)
  nameWithType.vb: BookRepository.New(ApplicationContext)
- uid: Repository.BookRepository.#ctor*
  name: BookRepository
  href: api/Repository.BookRepository.html#Repository_BookRepository__ctor_
  commentId: Overload:Repository.BookRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Repository.BookRepository.BookRepository
  fullName.vb: Repository.BookRepository.New
  nameWithType: BookRepository.BookRepository
  nameWithType.vb: BookRepository.New
- uid: Repository.BookRepository.CountBooksAsync(Entities.RequestFeatures.BookParameters)
  name: CountBooksAsync(BookParameters)
  href: api/Repository.BookRepository.html#Repository_BookRepository_CountBooksAsync_Entities_RequestFeatures_BookParameters_
  commentId: M:Repository.BookRepository.CountBooksAsync(Entities.RequestFeatures.BookParameters)
  fullName: Repository.BookRepository.CountBooksAsync(Entities.RequestFeatures.BookParameters)
  nameWithType: BookRepository.CountBooksAsync(BookParameters)
- uid: Repository.BookRepository.CountBooksAsync*
  name: CountBooksAsync
  href: api/Repository.BookRepository.html#Repository_BookRepository_CountBooksAsync_
  commentId: Overload:Repository.BookRepository.CountBooksAsync
  isSpec: "True"
  fullName: Repository.BookRepository.CountBooksAsync
  nameWithType: BookRepository.CountBooksAsync
- uid: Repository.BookRepository.CreateBook(BooksManagementService.Models.Book)
  name: CreateBook(Book)
  href: api/Repository.BookRepository.html#Repository_BookRepository_CreateBook_BooksManagementService_Models_Book_
  commentId: M:Repository.BookRepository.CreateBook(BooksManagementService.Models.Book)
  fullName: Repository.BookRepository.CreateBook(BooksManagementService.Models.Book)
  nameWithType: BookRepository.CreateBook(Book)
- uid: Repository.BookRepository.CreateBook*
  name: CreateBook
  href: api/Repository.BookRepository.html#Repository_BookRepository_CreateBook_
  commentId: Overload:Repository.BookRepository.CreateBook
  isSpec: "True"
  fullName: Repository.BookRepository.CreateBook
  nameWithType: BookRepository.CreateBook
- uid: Repository.BookRepository.DeleteBook(BooksManagementService.Models.Book)
  name: DeleteBook(Book)
  href: api/Repository.BookRepository.html#Repository_BookRepository_DeleteBook_BooksManagementService_Models_Book_
  commentId: M:Repository.BookRepository.DeleteBook(BooksManagementService.Models.Book)
  fullName: Repository.BookRepository.DeleteBook(BooksManagementService.Models.Book)
  nameWithType: BookRepository.DeleteBook(Book)
- uid: Repository.BookRepository.DeleteBook*
  name: DeleteBook
  href: api/Repository.BookRepository.html#Repository_BookRepository_DeleteBook_
  commentId: Overload:Repository.BookRepository.DeleteBook
  isSpec: "True"
  fullName: Repository.BookRepository.DeleteBook
  nameWithType: BookRepository.DeleteBook
- uid: Repository.BookRepository.GetAllBooksAsync(Entities.RequestFeatures.BookParameters,System.Boolean)
  name: GetAllBooksAsync(BookParameters, bool)
  href: api/Repository.BookRepository.html#Repository_BookRepository_GetAllBooksAsync_Entities_RequestFeatures_BookParameters_System_Boolean_
  commentId: M:Repository.BookRepository.GetAllBooksAsync(Entities.RequestFeatures.BookParameters,System.Boolean)
  name.vb: GetAllBooksAsync(BookParameters, Boolean)
  fullName: Repository.BookRepository.GetAllBooksAsync(Entities.RequestFeatures.BookParameters, bool)
  fullName.vb: Repository.BookRepository.GetAllBooksAsync(Entities.RequestFeatures.BookParameters, Boolean)
  nameWithType: BookRepository.GetAllBooksAsync(BookParameters, bool)
  nameWithType.vb: BookRepository.GetAllBooksAsync(BookParameters, Boolean)
- uid: Repository.BookRepository.GetAllBooksAsync*
  name: GetAllBooksAsync
  href: api/Repository.BookRepository.html#Repository_BookRepository_GetAllBooksAsync_
  commentId: Overload:Repository.BookRepository.GetAllBooksAsync
  isSpec: "True"
  fullName: Repository.BookRepository.GetAllBooksAsync
  nameWithType: BookRepository.GetAllBooksAsync
- uid: Repository.BookRepository.GetBookAsync(System.Int32,System.Boolean)
  name: GetBookAsync(int, bool)
  href: api/Repository.BookRepository.html#Repository_BookRepository_GetBookAsync_System_Int32_System_Boolean_
  commentId: M:Repository.BookRepository.GetBookAsync(System.Int32,System.Boolean)
  name.vb: GetBookAsync(Integer, Boolean)
  fullName: Repository.BookRepository.GetBookAsync(int, bool)
  fullName.vb: Repository.BookRepository.GetBookAsync(Integer, Boolean)
  nameWithType: BookRepository.GetBookAsync(int, bool)
  nameWithType.vb: BookRepository.GetBookAsync(Integer, Boolean)
- uid: Repository.BookRepository.GetBookAsync*
  name: GetBookAsync
  href: api/Repository.BookRepository.html#Repository_BookRepository_GetBookAsync_
  commentId: Overload:Repository.BookRepository.GetBookAsync
  isSpec: "True"
  fullName: Repository.BookRepository.GetBookAsync
  nameWithType: BookRepository.GetBookAsync
- uid: Repository.BookRepository.GetBookByISBNAsync(System.String,System.Boolean)
  name: GetBookByISBNAsync(string, bool)
  href: api/Repository.BookRepository.html#Repository_BookRepository_GetBookByISBNAsync_System_String_System_Boolean_
  commentId: M:Repository.BookRepository.GetBookByISBNAsync(System.String,System.Boolean)
  name.vb: GetBookByISBNAsync(String, Boolean)
  fullName: Repository.BookRepository.GetBookByISBNAsync(string, bool)
  fullName.vb: Repository.BookRepository.GetBookByISBNAsync(String, Boolean)
  nameWithType: BookRepository.GetBookByISBNAsync(string, bool)
  nameWithType.vb: BookRepository.GetBookByISBNAsync(String, Boolean)
- uid: Repository.BookRepository.GetBookByISBNAsync*
  name: GetBookByISBNAsync
  href: api/Repository.BookRepository.html#Repository_BookRepository_GetBookByISBNAsync_
  commentId: Overload:Repository.BookRepository.GetBookByISBNAsync
  isSpec: "True"
  fullName: Repository.BookRepository.GetBookByISBNAsync
  nameWithType: BookRepository.GetBookByISBNAsync
- uid: Repository.Extensions
  name: Repository.Extensions
  href: api/Repository.Extensions.html
  commentId: N:Repository.Extensions
  fullName: Repository.Extensions
  nameWithType: Repository.Extensions
- uid: Repository.Extensions.RepositoryBookExtensions
  name: RepositoryBookExtensions
  href: api/Repository.Extensions.RepositoryBookExtensions.html
  commentId: T:Repository.Extensions.RepositoryBookExtensions
  fullName: Repository.Extensions.RepositoryBookExtensions
  nameWithType: RepositoryBookExtensions
- uid: Repository.Extensions.RepositoryBookExtensions.Search(System.Linq.IQueryable{BooksManagementService.Models.Book},System.String)
  name: Search(IQueryable<Book>, string)
  href: api/Repository.Extensions.RepositoryBookExtensions.html#Repository_Extensions_RepositoryBookExtensions_Search_System_Linq_IQueryable_BooksManagementService_Models_Book__System_String_
  commentId: M:Repository.Extensions.RepositoryBookExtensions.Search(System.Linq.IQueryable{BooksManagementService.Models.Book},System.String)
  name.vb: Search(IQueryable(Of Book), String)
  fullName: Repository.Extensions.RepositoryBookExtensions.Search(System.Linq.IQueryable<BooksManagementService.Models.Book>, string)
  fullName.vb: Repository.Extensions.RepositoryBookExtensions.Search(System.Linq.IQueryable(Of BooksManagementService.Models.Book), String)
  nameWithType: RepositoryBookExtensions.Search(IQueryable<Book>, string)
  nameWithType.vb: RepositoryBookExtensions.Search(IQueryable(Of Book), String)
- uid: Repository.Extensions.RepositoryBookExtensions.Search*
  name: Search
  href: api/Repository.Extensions.RepositoryBookExtensions.html#Repository_Extensions_RepositoryBookExtensions_Search_
  commentId: Overload:Repository.Extensions.RepositoryBookExtensions.Search
  isSpec: "True"
  fullName: Repository.Extensions.RepositoryBookExtensions.Search
  nameWithType: RepositoryBookExtensions.Search
- uid: Repository.RepositoryBase`1
  name: RepositoryBase<T>
  href: api/Repository.RepositoryBase-1.html
  commentId: T:Repository.RepositoryBase`1
  name.vb: RepositoryBase(Of T)
  fullName: Repository.RepositoryBase<T>
  fullName.vb: Repository.RepositoryBase(Of T)
  nameWithType: RepositoryBase<T>
  nameWithType.vb: RepositoryBase(Of T)
- uid: Repository.RepositoryBase`1.#ctor(Entities.ApplicationContext)
  name: RepositoryBase(ApplicationContext)
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1__ctor_Entities_ApplicationContext_
  commentId: M:Repository.RepositoryBase`1.#ctor(Entities.ApplicationContext)
  name.vb: New(ApplicationContext)
  fullName: Repository.RepositoryBase<T>.RepositoryBase(Entities.ApplicationContext)
  fullName.vb: Repository.RepositoryBase(Of T).New(Entities.ApplicationContext)
  nameWithType: RepositoryBase<T>.RepositoryBase(ApplicationContext)
  nameWithType.vb: RepositoryBase(Of T).New(ApplicationContext)
- uid: Repository.RepositoryBase`1.#ctor*
  name: RepositoryBase
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1__ctor_
  commentId: Overload:Repository.RepositoryBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Repository.RepositoryBase<T>.RepositoryBase
  fullName.vb: Repository.RepositoryBase(Of T).New
  nameWithType: RepositoryBase<T>.RepositoryBase
  nameWithType.vb: RepositoryBase(Of T).New
- uid: Repository.RepositoryBase`1.Create(`0)
  name: Create(T)
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_Create__0_
  commentId: M:Repository.RepositoryBase`1.Create(`0)
  fullName: Repository.RepositoryBase<T>.Create(T)
  fullName.vb: Repository.RepositoryBase(Of T).Create(T)
  nameWithType: RepositoryBase<T>.Create(T)
  nameWithType.vb: RepositoryBase(Of T).Create(T)
- uid: Repository.RepositoryBase`1.Create*
  name: Create
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_Create_
  commentId: Overload:Repository.RepositoryBase`1.Create
  isSpec: "True"
  fullName: Repository.RepositoryBase<T>.Create
  fullName.vb: Repository.RepositoryBase(Of T).Create
  nameWithType: RepositoryBase<T>.Create
  nameWithType.vb: RepositoryBase(Of T).Create
- uid: Repository.RepositoryBase`1.Delete(`0)
  name: Delete(T)
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_Delete__0_
  commentId: M:Repository.RepositoryBase`1.Delete(`0)
  fullName: Repository.RepositoryBase<T>.Delete(T)
  fullName.vb: Repository.RepositoryBase(Of T).Delete(T)
  nameWithType: RepositoryBase<T>.Delete(T)
  nameWithType.vb: RepositoryBase(Of T).Delete(T)
- uid: Repository.RepositoryBase`1.Delete*
  name: Delete
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_Delete_
  commentId: Overload:Repository.RepositoryBase`1.Delete
  isSpec: "True"
  fullName: Repository.RepositoryBase<T>.Delete
  fullName.vb: Repository.RepositoryBase(Of T).Delete
  nameWithType: RepositoryBase<T>.Delete
  nameWithType.vb: RepositoryBase(Of T).Delete
- uid: Repository.RepositoryBase`1.FindAll(System.Boolean)
  name: FindAll(bool)
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_FindAll_System_Boolean_
  commentId: M:Repository.RepositoryBase`1.FindAll(System.Boolean)
  name.vb: FindAll(Boolean)
  fullName: Repository.RepositoryBase<T>.FindAll(bool)
  fullName.vb: Repository.RepositoryBase(Of T).FindAll(Boolean)
  nameWithType: RepositoryBase<T>.FindAll(bool)
  nameWithType.vb: RepositoryBase(Of T).FindAll(Boolean)
- uid: Repository.RepositoryBase`1.FindAll*
  name: FindAll
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_FindAll_
  commentId: Overload:Repository.RepositoryBase`1.FindAll
  isSpec: "True"
  fullName: Repository.RepositoryBase<T>.FindAll
  fullName.vb: Repository.RepositoryBase(Of T).FindAll
  nameWithType: RepositoryBase<T>.FindAll
  nameWithType.vb: RepositoryBase(Of T).FindAll
- uid: Repository.RepositoryBase`1.FindByCondition(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  name: FindByCondition(Expression<Func<T, bool>>, bool)
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_FindByCondition_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  commentId: M:Repository.RepositoryBase`1.FindByCondition(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  name.vb: FindByCondition(Expression(Of Func(Of T, Boolean)), Boolean)
  fullName: Repository.RepositoryBase<T>.FindByCondition(System.Linq.Expressions.Expression<System.Func<T, bool>>, bool)
  fullName.vb: Repository.RepositoryBase(Of T).FindByCondition(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Boolean)
  nameWithType: RepositoryBase<T>.FindByCondition(Expression<Func<T, bool>>, bool)
  nameWithType.vb: RepositoryBase(Of T).FindByCondition(Expression(Of Func(Of T, Boolean)), Boolean)
- uid: Repository.RepositoryBase`1.FindByCondition*
  name: FindByCondition
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_FindByCondition_
  commentId: Overload:Repository.RepositoryBase`1.FindByCondition
  isSpec: "True"
  fullName: Repository.RepositoryBase<T>.FindByCondition
  fullName.vb: Repository.RepositoryBase(Of T).FindByCondition
  nameWithType: RepositoryBase<T>.FindByCondition
  nameWithType.vb: RepositoryBase(Of T).FindByCondition
- uid: Repository.RepositoryBase`1.RepositoryContext
  name: RepositoryContext
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_RepositoryContext
  commentId: F:Repository.RepositoryBase`1.RepositoryContext
  fullName: Repository.RepositoryBase<T>.RepositoryContext
  fullName.vb: Repository.RepositoryBase(Of T).RepositoryContext
  nameWithType: RepositoryBase<T>.RepositoryContext
  nameWithType.vb: RepositoryBase(Of T).RepositoryContext
- uid: Repository.RepositoryBase`1.Update(`0)
  name: Update(T)
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_Update__0_
  commentId: M:Repository.RepositoryBase`1.Update(`0)
  fullName: Repository.RepositoryBase<T>.Update(T)
  fullName.vb: Repository.RepositoryBase(Of T).Update(T)
  nameWithType: RepositoryBase<T>.Update(T)
  nameWithType.vb: RepositoryBase(Of T).Update(T)
- uid: Repository.RepositoryBase`1.Update*
  name: Update
  href: api/Repository.RepositoryBase-1.html#Repository_RepositoryBase_1_Update_
  commentId: Overload:Repository.RepositoryBase`1.Update
  isSpec: "True"
  fullName: Repository.RepositoryBase<T>.Update
  fullName.vb: Repository.RepositoryBase(Of T).Update
  nameWithType: RepositoryBase<T>.Update
  nameWithType.vb: RepositoryBase(Of T).Update
- uid: Repository.RepositoryManager
  name: RepositoryManager
  href: api/Repository.RepositoryManager.html
  commentId: T:Repository.RepositoryManager
  fullName: Repository.RepositoryManager
  nameWithType: RepositoryManager
- uid: Repository.RepositoryManager.#ctor(Entities.ApplicationContext)
  name: RepositoryManager(ApplicationContext)
  href: api/Repository.RepositoryManager.html#Repository_RepositoryManager__ctor_Entities_ApplicationContext_
  commentId: M:Repository.RepositoryManager.#ctor(Entities.ApplicationContext)
  name.vb: New(ApplicationContext)
  fullName: Repository.RepositoryManager.RepositoryManager(Entities.ApplicationContext)
  fullName.vb: Repository.RepositoryManager.New(Entities.ApplicationContext)
  nameWithType: RepositoryManager.RepositoryManager(ApplicationContext)
  nameWithType.vb: RepositoryManager.New(ApplicationContext)
- uid: Repository.RepositoryManager.#ctor*
  name: RepositoryManager
  href: api/Repository.RepositoryManager.html#Repository_RepositoryManager__ctor_
  commentId: Overload:Repository.RepositoryManager.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Repository.RepositoryManager.RepositoryManager
  fullName.vb: Repository.RepositoryManager.New
  nameWithType: RepositoryManager.RepositoryManager
  nameWithType.vb: RepositoryManager.New
- uid: Repository.RepositoryManager.Book
  name: Book
  href: api/Repository.RepositoryManager.html#Repository_RepositoryManager_Book
  commentId: P:Repository.RepositoryManager.Book
  fullName: Repository.RepositoryManager.Book
  nameWithType: RepositoryManager.Book
- uid: Repository.RepositoryManager.Book*
  name: Book
  href: api/Repository.RepositoryManager.html#Repository_RepositoryManager_Book_
  commentId: Overload:Repository.RepositoryManager.Book
  isSpec: "True"
  fullName: Repository.RepositoryManager.Book
  nameWithType: RepositoryManager.Book
- uid: Repository.RepositoryManager.SaveAsync
  name: SaveAsync()
  href: api/Repository.RepositoryManager.html#Repository_RepositoryManager_SaveAsync
  commentId: M:Repository.RepositoryManager.SaveAsync
  fullName: Repository.RepositoryManager.SaveAsync()
  nameWithType: RepositoryManager.SaveAsync()
- uid: Repository.RepositoryManager.SaveAsync*
  name: SaveAsync
  href: api/Repository.RepositoryManager.html#Repository_RepositoryManager_SaveAsync_
  commentId: Overload:Repository.RepositoryManager.SaveAsync
  isSpec: "True"
  fullName: Repository.RepositoryManager.SaveAsync
  nameWithType: RepositoryManager.SaveAsync
